cmake_minimum_required(VERSION 3.7)

# Name of the output
project(main.exe)

# Find library
find_package(imgui REQUIRED)
find_package(GLEW REQUIRED)

# using file GLOB command, set source code path to SRC_FILES
file(GLOB SRC_FILES
    "${PROJECT_SOURCE_DIR}/src/*.h"
    "${PROJECT_SOURCE_DIR}/src/*.cpp"
    "${PROJECT_SOURCE_DIR}/src/*.c"
    "${PROJECT_SOURCE_DIR}/src/*.cc"
)

# The files to build
add_executable(${CMAKE_PROJECT_NAME} ${SRC_FILES})

# Link library
target_link_libraries($(CMAKE_PROJECT_NAME) PRIVATE imgui:: imgui)
target_link_libraries(S(CMAKE_PROJECT_NAME) PRIVATE glfw)
target_link_libraries($(CMAKE_PROJECT_NAME) PRIVATE GLEW: : GLEW)
target_link_libraries($(CMAKE_PROJECT_NAME) PRIVATE gIm)

# support c++ 17
target_compile_features($(CMAKE_PROJECT_NAME) PRIVATE xx_std_ 17)

# Copy assets files after build.
add_custom_command(
    TARGET $(CMAKE_ PROJECT_NAME)
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    "${PROJECT_ SOURCE_DIR}/assets"
    "$<TARGET_FILE_DIR: ${CMAKE_PROJECT_NAME}>/assets")

add_custom_command(
    TARGET $(CMAKE_ PROJECT_NAME)
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    "${PROJECT_ SOURCE_DIR}/shader/"
    "$<TARGET_FILE_DIR: ${CMAKE_PROJECT_NAME}>/shader")